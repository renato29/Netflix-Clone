{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","id","videoId","opts","heght","width","playerVars","autoplay","API_KEY","requests","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8316471.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react'\nimport axios from './axios';\nimport './Row.css';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer'\n\nconst img_base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n     \n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl])\n\n    // objeto das opcoes do trailer de cada filme,react youtube\n    const opts = { \n        heght: \"390\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: 1,\n        }\n    }\n\n    // click de cada filme para mostrar o trailer\n    const handleClick=(movie) => {\n        if(trailerUrl){\n            setTrailerUrl('');\n        }else {\n            movieTrailer(movie?.name || \"\")\n            .then(url=>{\n                const urlParams = new URLSearchParams(new URL(url).search)\n                setTrailerUrl(urlParams.get('v'));\n            }).catch((error) =>console.log(error));\n        }\n    }\n\n    return (\n        <div className=\"row\">\n\n            <h2>{title}</h2>\n            {/* {coloco um conteiner com os posters de cada filme} */}\n            <div className='row_posters'>\n                {movies.map(movie => (\n                    <img\n                        key={movie.id}\n                        className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n                        src={`${img_base_url}${ isLargeRow ? movie.poster_path  : movie.backdrop_path }`}\n                        alt={movie.name} \n                        onClick={()=> handleClick(movie)}    \n                    />))}\n                {/* row poster dos filmes que irao ter slides. */}\n            </div>\n                {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n        </div>\n    )\n}\n\nexport default Row\n\n// fiz o destruction da prop title que recebe do app.js  e renderizei ela dentro de h2","const API_KEY = \"c087d895f6f85e853c264ab4fbf9b2b7\"\n\nconst requests = { \n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n\n\n}\n\nexport default requests;","import React, { useState, useEffect } from 'react'\nimport axios from './axios';\nimport requests from './requests';\nimport './Banner.css'\n\nfunction Banner() {\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)])\n            return request;\n        }\n        fetchData()\n    }, []);\n\n    function truncate(str, n) {\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n      }\n\n    return (\n        <header \n        className='banner'\n            style={{\n                backgroundSize: \"cover\",\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\"`,\n                backgroundPosition: 'center center'\n            }}\n        >\n            <div className='banner_contents'>\n\n                <h1 className='banner_title'>{movie?.title || movie?.name || movie?.original_name}</h1>\n\n                <div className='banner_buttons' >\n                    <button className='banner_button'>Play</button>\n                    <button className='banner_button'>My List</button>\n                </div>\n\n        <h1 className= 'banner_sinopsis' >\n            {truncate(movie?.overview,150)}\n        </h1>           \n        </div>\n        <div className='banner_fadeBottom'>\n        </div>\n        </header>\n    )\n}\n\nexport default Banner\n","import React, { useEffect, useState } from \"react\";\nimport './navbar.css'\n\nfunction Navbar() {\n    const [show, handleShow] = useState(false);\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 120) {\n              handleShow(true);\n            } else {\n              handleShow(false);\n            }\n          });\n          return () => {\n            window.removeEventListener(\"scroll\");\n          };\n    }, [])\n\n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n      <img\n        className=\"nav__logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\n        alt=\"Netflix Logo\"\n      />\n      <img\n        className=\"nav__avatar\"\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\n        alt=\"Avatar\"\n      />\n    </div>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Row from './Row'\nimport requests from \"./requests\";\nimport Banner from './Banner';\nimport Navbar from './Navbar'\nimport './App.css'\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Banner/>\n      <Row title='NETFLIX ORIGINALS' fetchUrl={requests.fetchNetflixOriginals} isLargeRow={true} />\n      <Row title='TRENDING NOW' fetchUrl={requests.fetchTrending} />\n      <Row title='TOP RATED' fetchUrl={requests.fetchTopRated} />\n      <Row title='Action Movies' fetchUrl={requests.fetchActionMovies} />\n      <Row title='Comedy Movies' fetchUrl={requests.fetchComedyMovies} />\n      <Row title='Horror Movies' fetchUrl={requests.fetchHorrorMovies} />\n      <Row title='Romance Movies' fetchUrl={requests.fetchRomanceMovies} />\n      <Row title='Documentaries' fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}